//********************************************************************************//
// MIT License                                                                    //
//                                                                                //
// Copyright (c) 2024 TeamViewer Germany GmbH                                     //
//                                                                                //
// Permission is hereby granted, free of charge, to any person obtaining a copy   //
// of this software and associated documentation files (the "Software"), to deal  //
// in the Software without restriction, including without limitation the rights   //
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      //
// copies of the Software, and to permit persons to whom the Software is          //
// furnished to do so, subject to the following conditions:                       //
//                                                                                //
// The above copyright notice and this permission notice shall be included in all //
// copies or substantial portions of the Software.                                //
//                                                                                //
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     //
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       //
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    //
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         //
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  //
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  //
// SOFTWARE.                                                                      //
//********************************************************************************//
// ==================================
// Generated by TVCMGen. DO NOT EDIT!
// ==================================
#pragma once

#include <TVRemoteScreenSDKCommunication/ChatService/IChatOutServiceClient.h>
#include <TVRemoteScreenSDKCommunication/ServiceBase/gRPCTransport.h>

#include "ChatOutService.grpc.pb.h"
#include <memory>
#include <string>

namespace TVRemoteScreenSDKCommunication
{

namespace ChatService
{

class ChatOutServicegRPCClient : public IChatOutServiceClient
{
public:
	using TransportFW = Transport::gRPC;

	ChatOutServicegRPCClient() = default;
	~ChatOutServicegRPCClient() override = default;

	void StartClient(const std::string& destination) override;
	void StopClient(bool force) override;

	ServiceType GetServiceType() const override;
	const std::string& GetDestination() const override;

	// rpc call ChatCreated
	CallStatus ChatCreated(

		const std::string& comId,
		const std::string& chatId,
		const std::string& title,
		ChatType chatType,
		uint32_t chatTypeId) override;

	// rpc call ChatsRemoved
	CallStatus ChatsRemoved(

		const std::string& comId,
		const std::vector<std::string>& chatId) override;

	// rpc call ReceivedMessages
	CallStatus ReceivedMessages(

		const std::string& comId,
		const std::vector<ReceivedMessage>& received) override;

	// rpc call MessageSent
	CallStatus MessageSent(

		const std::string& comId,
		uint32_t localId,
		const std::string& messageId,
		uint64_t timeStamp) override;

	// rpc call MessageNotSent
	CallStatus MessageNotSent(

		const std::string& comId,
		uint32_t localId) override;

	// rpc call LoadedMessages
	CallStatus LoadedMessages(

		const std::string& comId,
		const std::vector<ReceivedMessage>& messages,
		bool hasMore) override;

	// rpc call DeletedHistory
	CallStatus DeletedHistory(

		const std::string& comId,
		const std::string& chatId) override;

	// rpc call ClosedChat
	CallStatus ClosedChat(

		const std::string& comId,
		const std::string& chatId) override;

private:
	std::string m_destination;
	std::shared_ptr<::grpc::ChannelInterface> m_channel;
	std::unique_ptr<::tvchatservice::ChatOutService::Stub> m_stub;
};

} // namespace ChatService

} // namespace TVRemoteScreenSDKCommunication