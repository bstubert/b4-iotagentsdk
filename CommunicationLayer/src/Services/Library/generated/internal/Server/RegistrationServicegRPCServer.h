//********************************************************************************//
// MIT License                                                                    //
//                                                                                //
// Copyright (c) 2024 TeamViewer Germany GmbH                                     //
//                                                                                //
// Permission is hereby granted, free of charge, to any person obtaining a copy   //
// of this software and associated documentation files (the "Software"), to deal  //
// in the Software without restriction, including without limitation the rights   //
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      //
// copies of the Software, and to permit persons to whom the Software is          //
// furnished to do so, subject to the following conditions:                       //
//                                                                                //
// The above copyright notice and this permission notice shall be included in all //
// copies or substantial portions of the Software.                                //
//                                                                                //
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     //
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       //
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    //
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         //
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  //
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  //
// SOFTWARE.                                                                      //
//********************************************************************************//
// ==================================
// Generated by TVCMGen. DO NOT EDIT!
// ==================================
#pragma once

#include <TVRemoteScreenSDKCommunication/RegistrationService/IRegistrationServiceServer.h>
#include <TVRemoteScreenSDKCommunication/ServiceBase/gRPCTransport.h>

#include "RegistrationService.grpc.pb.h"

#include <grpc++/server.h>

#include <memory>
#include <string>

namespace TVRemoteScreenSDKCommunication
{

namespace RegistrationService
{

class RegistrationServicegRPCServer
	: public ::tvregistrationservice::RegistrationService::Service
	, public IRegistrationServiceServer
{
public:
	using TransportFW = Transport::gRPC;

	RegistrationServicegRPCServer() = default;
	~RegistrationServicegRPCServer() override = default;

	bool StartServer(const std::string& location) override;
	void StopServer(bool force) override;

	ServiceType GetServiceType() const override;
	const std::string& GetLocation() const override;

	// public interface impl
	void SetExchangeVersionCallback(const ProcessExchangeVersionRequestCallback& requestProcessing) override;

	void SetDiscoverCallback(const ProcessDiscoverRequestCallback& requestProcessing) override;

	void SetRegisterCallback(const ProcessRegisterRequestCallback& requestProcessing) override;

	// grpc service impl
	::grpc::Status ExchangeVersion(::grpc::ServerContext* context,
		const ::tvregistrationservice::ExchangeVersionRequest* request,
		::tvregistrationservice::ExchangeVersionResponse* response) override;

	::grpc::Status Discover(::grpc::ServerContext* context,
		const ::tvregistrationservice::DiscoverRequest* request,
		::tvregistrationservice::DiscoverResponse* response) override;

	::grpc::Status Register(::grpc::ServerContext* context,
		const ::tvregistrationservice::RegisterRequest* request,
		::tvregistrationservice::RegisterResponse* response) override;

private:
	std::string m_location;
	std::unique_ptr<::grpc::Server> m_server;

	ProcessExchangeVersionRequestCallback m_exchangeVersionProcessing;
	ProcessDiscoverRequestCallback m_discoverProcessing;
	ProcessRegisterRequestCallback m_registerProcessing;
};

} // namespace RegistrationService

} // namespace TVRemoteScreenSDKCommunication